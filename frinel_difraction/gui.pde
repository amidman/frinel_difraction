/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:btnDOWN:981727:
  m.lambda=m.lambda-0.5;
} //_CODE_:btnDOWN:981727:

public void button2_click1(GButton source, GEvent event) { //_CODE_:btnUP:588003:
  m.lambda=m.lambda+0.5;
} //_CODE_:btnUP:588003:

public void button1_click2(GButton source, GEvent event) { //_CODE_:button_vu:200809:
  m.v=m.v+0.1;
} //_CODE_:button_vu:200809:

public void button2_click2(GButton source, GEvent event) { //_CODE_:button_vd:932329:
  m.v=m.v-0.1;
} //_CODE_:button_vd:932329:

public void knob1_turn1(GKnob source, GEvent event) { //_CODE_:knob1:398912:
  //m.fi=source.getValueF()*PI*2;
} //_CODE_:knob1:398912:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:815145:
  m.len=int(m.w_f*(1-source.getValueF()));
} //_CODE_:slider1:815145:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:slider2:860519:
  m.d=int(m.h_f*(1-source.getValueF()));
} //_CODE_:slider2:860519:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  view1 = new GView(this, 71, 9, 404, 300, P2D);
  btnDOWN = new GButton(this, 4, 47, 33, 30);
  btnDOWN.setText("l_d");
  btnDOWN.addEventHandler(this, "button1_click1");
  btnUP = new GButton(this, 4, 15, 33, 30);
  btnUP.setText("l_u");
  btnUP.addEventHandler(this, "button2_click1");
  button_vu = new GButton(this, 4, 123, 33, 30);
  button_vu.setText("v_u");
  button_vu.addEventHandler(this, "button1_click2");
  button_vd = new GButton(this, 4, 161, 33, 30);
  button_vd.setText("v_d");
  button_vd.addEventHandler(this, "button2_click2");
  knob1 = new GKnob(this, 5, 221, 60, 60, 0.8);
  knob1.setTurnRange(110, 70);
  knob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  knob1.setSensitivity(1);
  knob1.setShowArcOnly(false);
  knob1.setOverArcOnly(false);
  knob1.setIncludeOverBezel(false);
  knob1.setShowTrack(true);
  knob1.setLimits(0.5, 0.0, 1.0);
  knob1.setNbrTicks(10);
  knob1.setShowTicks(true);
  knob1.setOpaque(false);
  knob1.addEventHandler(this, "knob1_turn1");
  slider1 = new GSlider(this, 71, 312, 404, 40, 10.0);
  slider1.setLimits(0.5, 0.0, 1.0);
  slider1.setNbrTicks(10);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  slider2 = new GSlider(this, 71, 355, 404, 40, 10.0);
  slider2.setLimits(0.5, 0.0, 1.0);
  slider2.setNumberFormat(G4P.DECIMAL, 2);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "slider2_change1");
  label1 = new GLabel(this, -33, 312, 142, 42);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Ширина:");
  label1.setOpaque(false);
  label2 = new GLabel(this, -4, 365, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Расстояние:");
  label2.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GView view1; 
GButton btnDOWN; 
GButton btnUP; 
GButton button_vu; 
GButton button_vd; 
GKnob knob1; 
GSlider slider1; 
GSlider slider2; 
GLabel label1; 
GLabel label2; 
